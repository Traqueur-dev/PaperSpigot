From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 29 Jun 2020 03:26:17 -0400
Subject: [PATCH] Support old UUID format for NBT

We have stored UUID in plenty of places that did not get DFU'd

So just look for old format and load it if it exists.

diff --git a/src/main/java/net/minecraft/nbt/CompoundTag.java b/src/main/java/net/minecraft/nbt/CompoundTag.java
index c7945686a4ee50d7a9d5f1173aa90e456f68b410..23916b011ed0645ab284fb080c9555921290d875 100644
--- a/src/main/java/net/minecraft/nbt/CompoundTag.java
+++ b/src/main/java/net/minecraft/nbt/CompoundTag.java
@@ -232,6 +232,12 @@ public class CompoundTag implements Tag {
     }
 
     public void putUUID(String key, UUID value) {
+        // Paper start - Support old UUID format
+        if (this.contains(key + "Most", net.minecraft.nbt.Tag.TAG_ANY_NUMERIC) && this.contains(key + "Least", net.minecraft.nbt.Tag.TAG_ANY_NUMERIC)) {
+            this.tags.remove(key + "Most");
+            this.tags.remove(key + "Least");
+        }
+        // Paper end - Support old UUID format
         this.tags.put(key, NbtUtils.createUUID(value));
     }
 
@@ -240,10 +246,20 @@ public class CompoundTag implements Tag {
      * You must use {@link #hasUUID(String)} before or else it <b>will</b> throw an NPE.
      */
     public UUID getUUID(String key) {
+        // Paper start - Support old UUID format
+        if (!contains(key, 11) && this.contains(key + "Most", net.minecraft.nbt.Tag.TAG_ANY_NUMERIC) && this.contains(key + "Least", net.minecraft.nbt.Tag.TAG_ANY_NUMERIC)) {
+            return new UUID(this.getLong(key + "Most"), this.getLong(key + "Least"));
+        }
+        // Paper end - Support old UUID format
         return NbtUtils.loadUUID(this.get(key));
     }
 
     public boolean hasUUID(String key) {
+        // Paper start - Support old UUID format
+        if (this.contains(key + "Most", net.minecraft.nbt.Tag.TAG_ANY_NUMERIC) && this.contains(key + "Least", net.minecraft.nbt.Tag.TAG_ANY_NUMERIC)) {
+            return true;
+        }
+        // Paper end - Support old UUID format
         Tag tag = this.get(key);
         return tag != null && tag.getType() == IntArrayTag.TYPE && ((IntArrayTag)tag).getAsIntArray().length == 4;
     }
diff --git a/src/main/java/net/minecraft/nbt/NbtUtils.java b/src/main/java/net/minecraft/nbt/NbtUtils.java
index 3e395d575fab2348cd30a88511a194aba2d8e4ba..f3b11b08358fdd93464cd19b05047e10727a5799 100644
--- a/src/main/java/net/minecraft/nbt/NbtUtils.java
+++ b/src/main/java/net/minecraft/nbt/NbtUtils.java
@@ -65,6 +65,14 @@ public final class NbtUtils {
     @Nullable
     public static GameProfile readGameProfile(CompoundTag nbt) {
         UUID uUID = nbt.hasUUID("Id") ? nbt.getUUID("Id") : Util.NIL_UUID;
+        // Paper start - Support old UUID format
+        if (nbt.contains("Id", Tag.TAG_STRING)) {
+            try {
+                uUID = UUID.fromString(nbt.getString("Id"));
+            } catch (IllegalArgumentException ignored){
+            }
+        }
+        // Paper end - Support old UUID format
         String string = nbt.getString("Name");
 
         try {
