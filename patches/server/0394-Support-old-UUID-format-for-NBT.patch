From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 29 Jun 2020 03:26:17 -0400
Subject: [PATCH] Support old UUID format for NBT

We have stored UUID in plenty of places that did not get DFU'd

So just look for old format and load it if it exists.

diff --git a/src/main/java/net/minecraft/nbt/CompoundTag.java b/src/main/java/net/minecraft/nbt/CompoundTag.java
index 17df3322cd407191465cc4ad09f355569228c772..528b2b84889982fb37c81a72d51eb835c84eb843 100644
--- a/src/main/java/net/minecraft/nbt/CompoundTag.java
+++ b/src/main/java/net/minecraft/nbt/CompoundTag.java
@@ -236,6 +236,12 @@ public class CompoundTag implements Tag {
     }
 
     public void putUUID(String key, UUID value) {
+        // Paper start - Support old UUID format
+        if (this.contains(key + "Most", net.minecraft.nbt.Tag.TAG_ANY_NUMERIC) && this.contains(key + "Least", net.minecraft.nbt.Tag.TAG_ANY_NUMERIC)) {
+            this.tags.remove(key + "Most");
+            this.tags.remove(key + "Least");
+        }
+        // Paper end - Support old UUID format
         this.tags.put(key, NbtUtils.createUUID(value));
     }
 
@@ -244,10 +250,20 @@ public class CompoundTag implements Tag {
      * You must use {@link #hasUUID(String)} before or else it <b>will</b> throw an NPE.
      */
     public UUID getUUID(String key) {
+        // Paper start - Support old UUID format
+        if (!contains(key, 11) && this.contains(key + "Most", net.minecraft.nbt.Tag.TAG_ANY_NUMERIC) && this.contains(key + "Least", net.minecraft.nbt.Tag.TAG_ANY_NUMERIC)) {
+            return new UUID(this.getLong(key + "Most"), this.getLong(key + "Least"));
+        }
+        // Paper end - Support old UUID format
         return NbtUtils.loadUUID(this.get(key));
     }
 
     public boolean hasUUID(String key) {
+        // Paper start - Support old UUID format
+        if (this.contains(key + "Most", net.minecraft.nbt.Tag.TAG_ANY_NUMERIC) && this.contains(key + "Least", net.minecraft.nbt.Tag.TAG_ANY_NUMERIC)) {
+            return true;
+        }
+        // Paper end - Support old UUID format
         Tag tag = this.get(key);
         return tag != null && tag.getType() == IntArrayTag.TYPE && ((IntArrayTag)tag).getAsIntArray().length == 4;
     }
diff --git a/src/main/java/net/minecraft/nbt/NbtUtils.java b/src/main/java/net/minecraft/nbt/NbtUtils.java
index c5ac21c4cc50c7acf96f0ba3ac4713cd508f6a01..c613577572532fd1b8a8c912b9fd8e41c54669bb 100644
--- a/src/main/java/net/minecraft/nbt/NbtUtils.java
+++ b/src/main/java/net/minecraft/nbt/NbtUtils.java
@@ -73,6 +73,14 @@ public final class NbtUtils {
     @Nullable
     public static GameProfile readGameProfile(CompoundTag nbt) {
         UUID uUID = nbt.hasUUID("Id") ? nbt.getUUID("Id") : Util.NIL_UUID;
+        // Paper start - Support old UUID format
+        if (nbt.contains("Id", Tag.TAG_STRING)) {
+            try {
+                uUID = UUID.fromString(nbt.getString("Id"));
+            } catch (IllegalArgumentException ignored){
+            }
+        }
+        // Paper end - Support old UUID format
         String string = nbt.getString("Name");
 
         try {
